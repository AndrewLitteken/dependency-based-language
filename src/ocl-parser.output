Terminals unused in grammar

   TOKEN_COMMENT
   TOKEN_RIGHT_BRACKET
   TOKEN_LEFT_BRACKET
   TOKEN_RIGHT_BRACE
   TOKEN_LEFT_BRACE
   TOKEN_IN
   TOKEN_FOR
   TOKEN_ERROR
   TOKEN_SEMI


Grammar

    0 $accept: program TOKEN_EOF

    1 program: line_list

    2 line_list: line line_list
    3          | %empty

    4 line: begin_indent line_type TOKEN_NEWLINE
    5     | TOKEN_NEWLINE

    6 line_type: decl
    7          | stmt

    8 fill_line: decl
    9          | stmt
   10          | TOKEN_PASS
   11          | TOKEN_NEWLINE indent fill_line

   12 decl: name TOKEN_ASSIGN TOKEN_FUNCTION TOKEN_LEFT_PAREN arg_list TOKEN_RIGHT_PAREN TOKEN_COLON TOKEN_NEWLINE indent fill_line
   13     | name TOKEN_DEFINITION expr
   14     | expr

   15 stmt: TOKEN_PRINT TOKEN_LEFT_PAREN expr TOKEN_RIGHT_PAREN
   16     | TOKEN_IF expr TOKEN_COLON TOKEN_NEWLINE indent fill_line
   17     | TOKEN_ELSE TOKEN_IF expr TOKEN_COLON TOKEN_NEWLINE indent fill_line
   18     | TOKEN_ELSE TOKEN_COLON TOKEN_NEWLINE indent fill_line
   19     | TOKEN_WHILE expr TOKEN_COLON TOKEN_NEWLINE indent fill_line
   20     | TOKEN_RETURN expr
   21     | loop_control

   22 loop_control: TOKEN_CONTINUE
   23             | TOKEN_BREAK

   24 expr: name TOKEN_ASSIGN expr_or
   25     | expr TOKEN_INCEQ expr_or
   26     | expr TOKEN_DECEQ expr_or
   27     | expr TOKEN_MULTEQ expr_or
   28     | expr TOKEN_DIVEQ expr_or
   29     | expr_or

   30 expr_or: expr_or TOKEN_OR expr_and
   31        | expr_and

   32 expr_and: expr_and TOKEN_AND expr_eq
   33         | expr_eq

   34 expr_eq: expr_eq TOKEN_EQ expr_comp
   35        | expr_eq TOKEN_NE expr_comp
   36        | expr_comp

   37 expr_comp: expr_comp TOKEN_LT expr_add
   38          | expr_comp TOKEN_LE expr_add
   39          | expr_comp TOKEN_GT expr_add
   40          | expr_comp TOKEN_GE expr_add
   41          | expr_add

   42 expr_add: expr_add TOKEN_ADD expr_mul
   43         | expr_add TOKEN_MINUS expr_mul
   44         | expr_mul

   45 expr_mul: expr_mul TOKEN_MULTIPLY expr_exp
   46         | expr_mul TOKEN_DIVIDE expr_exp
   47         | expr_mul TOKEN_MOD expr_exp
   48         | expr_exp

   49 expr_exp: expr_exp TOKEN_EXPONENT expr_bool
   50         | expr_bool

   51 expr_bool: TOKEN_NOT non_int_literal
   52          | TOKEN_NOT name
   53          | non_int_literal
   54          | expr_minus

   55 expr_minus: TOKEN_MINUS expr_int
   56           | expr_int

   57 expr_int: value_literals
   58         | expr_inc

   59 expr_inc: expr_inc TOKEN_INCREMENT
   60         | expr_inc TOKEN_DECREMENT
   61         | expr_grp

   62 expr_grp: TOKEN_LEFT_PAREN expr TOKEN_RIGHT_PAREN
   63         | name
   64         | name TOKEN_LEFT_PAREN expr_list TOKEN_RIGHT_PAREN

   65 expr_list: expr TOKEN_COMMA expr_list
   66          | expr
   67          | %empty

   68 indent: TOKEN_INDENT_TAB
   69       | TOKEN_INDENT_SPACE

   70 begin_indent: TOKEN_INDENT_TAB
   71             | TOKEN_INDENT_SPACE
   72             | %empty

   73 arg_list: name TOKEN_COMMA arg_list
   74         | name
   75         | %empty

   76 value_literals: TOKEN_INTEGER_LITERAL
   77               | TOKEN_FP_LITERAL

   78 non_int_literal: TOKEN_BOOL_LITERAL
   79                | TOKEN_STRING_LITERAL

   80 name: TOKEN_IDENTIFIER


Terminals, with rules where they appear

TOKEN_EOF (0) 0
error (256)
TOKEN_INDENT_TAB (258) 68 70
TOKEN_INDENT_SPACE (259) 69 71
TOKEN_COMMENT (260)
TOKEN_IDENTIFIER (261) 80
TOKEN_INTEGER_LITERAL (262) 76
TOKEN_BOOL_LITERAL (263) 78
TOKEN_FP_LITERAL (264) 77
TOKEN_STRING_LITERAL (265) 79
TOKEN_RIGHT_PAREN (266) 12 15 62 64
TOKEN_LEFT_PAREN (267) 12 15 62 64
TOKEN_RIGHT_BRACKET (268)
TOKEN_LEFT_BRACKET (269)
TOKEN_RIGHT_BRACE (270)
TOKEN_LEFT_BRACE (271)
TOKEN_INCREMENT (272) 59
TOKEN_DECREMENT (273) 60
TOKEN_INCEQ (274) 25
TOKEN_DECEQ (275) 26
TOKEN_MULTEQ (276) 27
TOKEN_DIVEQ (277) 28
TOKEN_NOT (278) 51 52
TOKEN_EXPONENT (279) 49
TOKEN_MULTIPLY (280) 45
TOKEN_DIVIDE (281) 46
TOKEN_MOD (282) 47
TOKEN_ADD (283) 42
TOKEN_MINUS (284) 43 55
TOKEN_LT (285) 37
TOKEN_LE (286) 38
TOKEN_GT (287) 39
TOKEN_GE (288) 40
TOKEN_EQ (289) 34
TOKEN_NE (290) 35
TOKEN_AND (291) 32
TOKEN_OR (292) 30
TOKEN_IN (293)
TOKEN_ASSIGN (294) 12 24
TOKEN_DEFINITION (295) 13
TOKEN_PRINT (296) 15
TOKEN_FUNCTION (297) 12
TOKEN_NEWLINE (298) 4 5 11 12 16 17 18 19
TOKEN_FOR (299)
TOKEN_IF (300) 16 17
TOKEN_ELSE (301) 17 18
TOKEN_RETURN (302) 20
TOKEN_WHILE (303) 19
TOKEN_BREAK (304) 23
TOKEN_PASS (305) 10
TOKEN_CONTINUE (306) 22
TOKEN_COLON (307) 12 16 17 18 19
TOKEN_COMMA (308) 65 73
TOKEN_ERROR (309)
TOKEN_SEMI (310)


Nonterminals, with rules where they appear

$accept (56)
    on left: 0
program (57)
    on left: 1, on right: 0
line_list (58)
    on left: 2 3, on right: 1 2
line (59)
    on left: 4 5, on right: 2
line_type (60)
    on left: 6 7, on right: 4
fill_line (61)
    on left: 8 9 10 11, on right: 11 12 16 17 18 19
decl (62)
    on left: 12 13 14, on right: 6 8
stmt (63)
    on left: 15 16 17 18 19 20 21, on right: 7 9
loop_control (64)
    on left: 22 23, on right: 21
expr (65)
    on left: 24 25 26 27 28 29, on right: 13 14 15 16 17 19 20 25 26
    27 28 62 65 66
expr_or (66)
    on left: 30 31, on right: 24 25 26 27 28 29 30
expr_and (67)
    on left: 32 33, on right: 30 31 32
expr_eq (68)
    on left: 34 35 36, on right: 32 33 34 35
expr_comp (69)
    on left: 37 38 39 40 41, on right: 34 35 36 37 38 39 40
expr_add (70)
    on left: 42 43 44, on right: 37 38 39 40 41 42 43
expr_mul (71)
    on left: 45 46 47 48, on right: 42 43 44 45 46 47
expr_exp (72)
    on left: 49 50, on right: 45 46 47 48 49
expr_bool (73)
    on left: 51 52 53 54, on right: 49 50
expr_minus (74)
    on left: 55 56, on right: 54
expr_int (75)
    on left: 57 58, on right: 55 56
expr_inc (76)
    on left: 59 60 61, on right: 58 59 60
expr_grp (77)
    on left: 62 63 64, on right: 61
expr_list (78)
    on left: 65 66 67, on right: 64 65
indent (79)
    on left: 68 69, on right: 11 12 16 17 18 19
begin_indent (80)
    on left: 70 71 72, on right: 4
arg_list (81)
    on left: 73 74 75, on right: 12 73
value_literals (82)
    on left: 76 77, on right: 57
non_int_literal (83)
    on left: 78 79, on right: 51 53
name (84)
    on left: 80, on right: 12 13 24 52 63 64 73 74


State 0

    0 $accept: . program TOKEN_EOF

    TOKEN_INDENT_TAB    shift, and go to state 1
    TOKEN_INDENT_SPACE  shift, and go to state 2
    TOKEN_NEWLINE       shift, and go to state 3

    TOKEN_EOF  reduce using rule 3 (line_list)
    $default   reduce using rule 72 (begin_indent)

    program       go to state 4
    line_list     go to state 5
    line          go to state 6
    begin_indent  go to state 7


State 1

   70 begin_indent: TOKEN_INDENT_TAB .

    $default  reduce using rule 70 (begin_indent)


State 2

   71 begin_indent: TOKEN_INDENT_SPACE .

    $default  reduce using rule 71 (begin_indent)


State 3

    5 line: TOKEN_NEWLINE .

    $default  reduce using rule 5 (line)


State 4

    0 $accept: program . TOKEN_EOF

    TOKEN_EOF  shift, and go to state 8


State 5

    1 program: line_list .

    $default  reduce using rule 1 (program)


State 6

    2 line_list: line . line_list

    TOKEN_INDENT_TAB    shift, and go to state 1
    TOKEN_INDENT_SPACE  shift, and go to state 2
    TOKEN_NEWLINE       shift, and go to state 3

    TOKEN_EOF  reduce using rule 3 (line_list)
    $default   reduce using rule 72 (begin_indent)

    line_list     go to state 9
    line          go to state 6
    begin_indent  go to state 7


State 7

    4 line: begin_indent . line_type TOKEN_NEWLINE

    TOKEN_IDENTIFIER       shift, and go to state 10
    TOKEN_INTEGER_LITERAL  shift, and go to state 11
    TOKEN_BOOL_LITERAL     shift, and go to state 12
    TOKEN_FP_LITERAL       shift, and go to state 13
    TOKEN_STRING_LITERAL   shift, and go to state 14
    TOKEN_LEFT_PAREN       shift, and go to state 15
    TOKEN_NOT              shift, and go to state 16
    TOKEN_MINUS            shift, and go to state 17
    TOKEN_PRINT            shift, and go to state 18
    TOKEN_IF               shift, and go to state 19
    TOKEN_ELSE             shift, and go to state 20
    TOKEN_RETURN           shift, and go to state 21
    TOKEN_WHILE            shift, and go to state 22
    TOKEN_BREAK            shift, and go to state 23
    TOKEN_CONTINUE         shift, and go to state 24

    line_type        go to state 25
    decl             go to state 26
    stmt             go to state 27
    loop_control     go to state 28
    expr             go to state 29
    expr_or          go to state 30
    expr_and         go to state 31
    expr_eq          go to state 32
    expr_comp        go to state 33
    expr_add         go to state 34
    expr_mul         go to state 35
    expr_exp         go to state 36
    expr_bool        go to state 37
    expr_minus       go to state 38
    expr_int         go to state 39
    expr_inc         go to state 40
    expr_grp         go to state 41
    value_literals   go to state 42
    non_int_literal  go to state 43
    name             go to state 44


State 8

    0 $accept: program TOKEN_EOF .

    $default  accept


State 9

    2 line_list: line line_list .

    $default  reduce using rule 2 (line_list)


State 10

   80 name: TOKEN_IDENTIFIER .

    $default  reduce using rule 80 (name)


State 11

   76 value_literals: TOKEN_INTEGER_LITERAL .

    $default  reduce using rule 76 (value_literals)


State 12

   78 non_int_literal: TOKEN_BOOL_LITERAL .

    $default  reduce using rule 78 (non_int_literal)


State 13

   77 value_literals: TOKEN_FP_LITERAL .

    $default  reduce using rule 77 (value_literals)


State 14

   79 non_int_literal: TOKEN_STRING_LITERAL .

    $default  reduce using rule 79 (non_int_literal)


State 15

   62 expr_grp: TOKEN_LEFT_PAREN . expr TOKEN_RIGHT_PAREN

    TOKEN_IDENTIFIER       shift, and go to state 10
    TOKEN_INTEGER_LITERAL  shift, and go to state 11
    TOKEN_BOOL_LITERAL     shift, and go to state 12
    TOKEN_FP_LITERAL       shift, and go to state 13
    TOKEN_STRING_LITERAL   shift, and go to state 14
    TOKEN_LEFT_PAREN       shift, and go to state 15
    TOKEN_NOT              shift, and go to state 16
    TOKEN_MINUS            shift, and go to state 17

    expr             go to state 45
    expr_or          go to state 30
    expr_and         go to state 31
    expr_eq          go to state 32
    expr_comp        go to state 33
    expr_add         go to state 34
    expr_mul         go to state 35
    expr_exp         go to state 36
    expr_bool        go to state 37
    expr_minus       go to state 38
    expr_int         go to state 39
    expr_inc         go to state 40
    expr_grp         go to state 41
    value_literals   go to state 42
    non_int_literal  go to state 43
    name             go to state 46


State 16

   51 expr_bool: TOKEN_NOT . non_int_literal
   52          | TOKEN_NOT . name

    TOKEN_IDENTIFIER      shift, and go to state 10
    TOKEN_BOOL_LITERAL    shift, and go to state 12
    TOKEN_STRING_LITERAL  shift, and go to state 14

    non_int_literal  go to state 47
    name             go to state 48


State 17

   55 expr_minus: TOKEN_MINUS . expr_int

    TOKEN_IDENTIFIER       shift, and go to state 10
    TOKEN_INTEGER_LITERAL  shift, and go to state 11
    TOKEN_FP_LITERAL       shift, and go to state 13
    TOKEN_LEFT_PAREN       shift, and go to state 15

    expr_int        go to state 49
    expr_inc        go to state 40
    expr_grp        go to state 41
    value_literals  go to state 42
    name            go to state 50


State 18

   15 stmt: TOKEN_PRINT . TOKEN_LEFT_PAREN expr TOKEN_RIGHT_PAREN

    TOKEN_LEFT_PAREN  shift, and go to state 51


State 19

   16 stmt: TOKEN_IF . expr TOKEN_COLON TOKEN_NEWLINE indent fill_line

    TOKEN_IDENTIFIER       shift, and go to state 10
    TOKEN_INTEGER_LITERAL  shift, and go to state 11
    TOKEN_BOOL_LITERAL     shift, and go to state 12
    TOKEN_FP_LITERAL       shift, and go to state 13
    TOKEN_STRING_LITERAL   shift, and go to state 14
    TOKEN_LEFT_PAREN       shift, and go to state 15
    TOKEN_NOT              shift, and go to state 16
    TOKEN_MINUS            shift, and go to state 17

    expr             go to state 52
    expr_or          go to state 30
    expr_and         go to state 31
    expr_eq          go to state 32
    expr_comp        go to state 33
    expr_add         go to state 34
    expr_mul         go to state 35
    expr_exp         go to state 36
    expr_bool        go to state 37
    expr_minus       go to state 38
    expr_int         go to state 39
    expr_inc         go to state 40
    expr_grp         go to state 41
    value_literals   go to state 42
    non_int_literal  go to state 43
    name             go to state 46


State 20

   17 stmt: TOKEN_ELSE . TOKEN_IF expr TOKEN_COLON TOKEN_NEWLINE indent fill_line
   18     | TOKEN_ELSE . TOKEN_COLON TOKEN_NEWLINE indent fill_line

    TOKEN_IF     shift, and go to state 53
    TOKEN_COLON  shift, and go to state 54


State 21

   20 stmt: TOKEN_RETURN . expr

    TOKEN_IDENTIFIER       shift, and go to state 10
    TOKEN_INTEGER_LITERAL  shift, and go to state 11
    TOKEN_BOOL_LITERAL     shift, and go to state 12
    TOKEN_FP_LITERAL       shift, and go to state 13
    TOKEN_STRING_LITERAL   shift, and go to state 14
    TOKEN_LEFT_PAREN       shift, and go to state 15
    TOKEN_NOT              shift, and go to state 16
    TOKEN_MINUS            shift, and go to state 17

    expr             go to state 55
    expr_or          go to state 30
    expr_and         go to state 31
    expr_eq          go to state 32
    expr_comp        go to state 33
    expr_add         go to state 34
    expr_mul         go to state 35
    expr_exp         go to state 36
    expr_bool        go to state 37
    expr_minus       go to state 38
    expr_int         go to state 39
    expr_inc         go to state 40
    expr_grp         go to state 41
    value_literals   go to state 42
    non_int_literal  go to state 43
    name             go to state 46


State 22

   19 stmt: TOKEN_WHILE . expr TOKEN_COLON TOKEN_NEWLINE indent fill_line

    TOKEN_IDENTIFIER       shift, and go to state 10
    TOKEN_INTEGER_LITERAL  shift, and go to state 11
    TOKEN_BOOL_LITERAL     shift, and go to state 12
    TOKEN_FP_LITERAL       shift, and go to state 13
    TOKEN_STRING_LITERAL   shift, and go to state 14
    TOKEN_LEFT_PAREN       shift, and go to state 15
    TOKEN_NOT              shift, and go to state 16
    TOKEN_MINUS            shift, and go to state 17

    expr             go to state 56
    expr_or          go to state 30
    expr_and         go to state 31
    expr_eq          go to state 32
    expr_comp        go to state 33
    expr_add         go to state 34
    expr_mul         go to state 35
    expr_exp         go to state 36
    expr_bool        go to state 37
    expr_minus       go to state 38
    expr_int         go to state 39
    expr_inc         go to state 40
    expr_grp         go to state 41
    value_literals   go to state 42
    non_int_literal  go to state 43
    name             go to state 46


State 23

   23 loop_control: TOKEN_BREAK .

    $default  reduce using rule 23 (loop_control)


State 24

   22 loop_control: TOKEN_CONTINUE .

    $default  reduce using rule 22 (loop_control)


State 25

    4 line: begin_indent line_type . TOKEN_NEWLINE

    TOKEN_NEWLINE  shift, and go to state 57


State 26

    6 line_type: decl .

    $default  reduce using rule 6 (line_type)


State 27

    7 line_type: stmt .

    $default  reduce using rule 7 (line_type)


State 28

   21 stmt: loop_control .

    $default  reduce using rule 21 (stmt)


State 29

   14 decl: expr .
   25 expr: expr . TOKEN_INCEQ expr_or
   26     | expr . TOKEN_DECEQ expr_or
   27     | expr . TOKEN_MULTEQ expr_or
   28     | expr . TOKEN_DIVEQ expr_or

    TOKEN_INCEQ   shift, and go to state 58
    TOKEN_DECEQ   shift, and go to state 59
    TOKEN_MULTEQ  shift, and go to state 60
    TOKEN_DIVEQ   shift, and go to state 61

    $default  reduce using rule 14 (decl)


State 30

   29 expr: expr_or .
   30 expr_or: expr_or . TOKEN_OR expr_and

    TOKEN_OR  shift, and go to state 62

    $default  reduce using rule 29 (expr)


State 31

   31 expr_or: expr_and .
   32 expr_and: expr_and . TOKEN_AND expr_eq

    TOKEN_AND  shift, and go to state 63

    $default  reduce using rule 31 (expr_or)


State 32

   33 expr_and: expr_eq .
   34 expr_eq: expr_eq . TOKEN_EQ expr_comp
   35        | expr_eq . TOKEN_NE expr_comp

    TOKEN_EQ  shift, and go to state 64
    TOKEN_NE  shift, and go to state 65

    $default  reduce using rule 33 (expr_and)


State 33

   36 expr_eq: expr_comp .
   37 expr_comp: expr_comp . TOKEN_LT expr_add
   38          | expr_comp . TOKEN_LE expr_add
   39          | expr_comp . TOKEN_GT expr_add
   40          | expr_comp . TOKEN_GE expr_add

    TOKEN_LT  shift, and go to state 66
    TOKEN_LE  shift, and go to state 67
    TOKEN_GT  shift, and go to state 68
    TOKEN_GE  shift, and go to state 69

    $default  reduce using rule 36 (expr_eq)


State 34

   41 expr_comp: expr_add .
   42 expr_add: expr_add . TOKEN_ADD expr_mul
   43         | expr_add . TOKEN_MINUS expr_mul

    TOKEN_ADD    shift, and go to state 70
    TOKEN_MINUS  shift, and go to state 71

    $default  reduce using rule 41 (expr_comp)


State 35

   44 expr_add: expr_mul .
   45 expr_mul: expr_mul . TOKEN_MULTIPLY expr_exp
   46         | expr_mul . TOKEN_DIVIDE expr_exp
   47         | expr_mul . TOKEN_MOD expr_exp

    TOKEN_MULTIPLY  shift, and go to state 72
    TOKEN_DIVIDE    shift, and go to state 73
    TOKEN_MOD       shift, and go to state 74

    $default  reduce using rule 44 (expr_add)


State 36

   48 expr_mul: expr_exp .
   49 expr_exp: expr_exp . TOKEN_EXPONENT expr_bool

    TOKEN_EXPONENT  shift, and go to state 75

    $default  reduce using rule 48 (expr_mul)


State 37

   50 expr_exp: expr_bool .

    $default  reduce using rule 50 (expr_exp)


State 38

   54 expr_bool: expr_minus .

    $default  reduce using rule 54 (expr_bool)


State 39

   56 expr_minus: expr_int .

    $default  reduce using rule 56 (expr_minus)


State 40

   58 expr_int: expr_inc .
   59 expr_inc: expr_inc . TOKEN_INCREMENT
   60         | expr_inc . TOKEN_DECREMENT

    TOKEN_INCREMENT  shift, and go to state 76
    TOKEN_DECREMENT  shift, and go to state 77

    $default  reduce using rule 58 (expr_int)


State 41

   61 expr_inc: expr_grp .

    $default  reduce using rule 61 (expr_inc)


State 42

   57 expr_int: value_literals .

    $default  reduce using rule 57 (expr_int)


State 43

   53 expr_bool: non_int_literal .

    $default  reduce using rule 53 (expr_bool)


State 44

   12 decl: name . TOKEN_ASSIGN TOKEN_FUNCTION TOKEN_LEFT_PAREN arg_list TOKEN_RIGHT_PAREN TOKEN_COLON TOKEN_NEWLINE indent fill_line
   13     | name . TOKEN_DEFINITION expr
   24 expr: name . TOKEN_ASSIGN expr_or
   63 expr_grp: name .
   64         | name . TOKEN_LEFT_PAREN expr_list TOKEN_RIGHT_PAREN

    TOKEN_LEFT_PAREN  shift, and go to state 78
    TOKEN_ASSIGN      shift, and go to state 79
    TOKEN_DEFINITION  shift, and go to state 80

    $default  reduce using rule 63 (expr_grp)


State 45

   25 expr: expr . TOKEN_INCEQ expr_or
   26     | expr . TOKEN_DECEQ expr_or
   27     | expr . TOKEN_MULTEQ expr_or
   28     | expr . TOKEN_DIVEQ expr_or
   62 expr_grp: TOKEN_LEFT_PAREN expr . TOKEN_RIGHT_PAREN

    TOKEN_RIGHT_PAREN  shift, and go to state 81
    TOKEN_INCEQ        shift, and go to state 58
    TOKEN_DECEQ        shift, and go to state 59
    TOKEN_MULTEQ       shift, and go to state 60
    TOKEN_DIVEQ        shift, and go to state 61


State 46

   24 expr: name . TOKEN_ASSIGN expr_or
   63 expr_grp: name .
   64         | name . TOKEN_LEFT_PAREN expr_list TOKEN_RIGHT_PAREN

    TOKEN_LEFT_PAREN  shift, and go to state 78
    TOKEN_ASSIGN      shift, and go to state 82

    $default  reduce using rule 63 (expr_grp)


State 47

   51 expr_bool: TOKEN_NOT non_int_literal .

    $default  reduce using rule 51 (expr_bool)


State 48

   52 expr_bool: TOKEN_NOT name .

    $default  reduce using rule 52 (expr_bool)


State 49

   55 expr_minus: TOKEN_MINUS expr_int .

    $default  reduce using rule 55 (expr_minus)


State 50

   63 expr_grp: name .
   64         | name . TOKEN_LEFT_PAREN expr_list TOKEN_RIGHT_PAREN

    TOKEN_LEFT_PAREN  shift, and go to state 78

    $default  reduce using rule 63 (expr_grp)


State 51

   15 stmt: TOKEN_PRINT TOKEN_LEFT_PAREN . expr TOKEN_RIGHT_PAREN

    TOKEN_IDENTIFIER       shift, and go to state 10
    TOKEN_INTEGER_LITERAL  shift, and go to state 11
    TOKEN_BOOL_LITERAL     shift, and go to state 12
    TOKEN_FP_LITERAL       shift, and go to state 13
    TOKEN_STRING_LITERAL   shift, and go to state 14
    TOKEN_LEFT_PAREN       shift, and go to state 15
    TOKEN_NOT              shift, and go to state 16
    TOKEN_MINUS            shift, and go to state 17

    expr             go to state 83
    expr_or          go to state 30
    expr_and         go to state 31
    expr_eq          go to state 32
    expr_comp        go to state 33
    expr_add         go to state 34
    expr_mul         go to state 35
    expr_exp         go to state 36
    expr_bool        go to state 37
    expr_minus       go to state 38
    expr_int         go to state 39
    expr_inc         go to state 40
    expr_grp         go to state 41
    value_literals   go to state 42
    non_int_literal  go to state 43
    name             go to state 46


State 52

   16 stmt: TOKEN_IF expr . TOKEN_COLON TOKEN_NEWLINE indent fill_line
   25 expr: expr . TOKEN_INCEQ expr_or
   26     | expr . TOKEN_DECEQ expr_or
   27     | expr . TOKEN_MULTEQ expr_or
   28     | expr . TOKEN_DIVEQ expr_or

    TOKEN_INCEQ   shift, and go to state 58
    TOKEN_DECEQ   shift, and go to state 59
    TOKEN_MULTEQ  shift, and go to state 60
    TOKEN_DIVEQ   shift, and go to state 61
    TOKEN_COLON   shift, and go to state 84


State 53

   17 stmt: TOKEN_ELSE TOKEN_IF . expr TOKEN_COLON TOKEN_NEWLINE indent fill_line

    TOKEN_IDENTIFIER       shift, and go to state 10
    TOKEN_INTEGER_LITERAL  shift, and go to state 11
    TOKEN_BOOL_LITERAL     shift, and go to state 12
    TOKEN_FP_LITERAL       shift, and go to state 13
    TOKEN_STRING_LITERAL   shift, and go to state 14
    TOKEN_LEFT_PAREN       shift, and go to state 15
    TOKEN_NOT              shift, and go to state 16
    TOKEN_MINUS            shift, and go to state 17

    expr             go to state 85
    expr_or          go to state 30
    expr_and         go to state 31
    expr_eq          go to state 32
    expr_comp        go to state 33
    expr_add         go to state 34
    expr_mul         go to state 35
    expr_exp         go to state 36
    expr_bool        go to state 37
    expr_minus       go to state 38
    expr_int         go to state 39
    expr_inc         go to state 40
    expr_grp         go to state 41
    value_literals   go to state 42
    non_int_literal  go to state 43
    name             go to state 46


State 54

   18 stmt: TOKEN_ELSE TOKEN_COLON . TOKEN_NEWLINE indent fill_line

    TOKEN_NEWLINE  shift, and go to state 86


State 55

   20 stmt: TOKEN_RETURN expr .
   25 expr: expr . TOKEN_INCEQ expr_or
   26     | expr . TOKEN_DECEQ expr_or
   27     | expr . TOKEN_MULTEQ expr_or
   28     | expr . TOKEN_DIVEQ expr_or

    TOKEN_INCEQ   shift, and go to state 58
    TOKEN_DECEQ   shift, and go to state 59
    TOKEN_MULTEQ  shift, and go to state 60
    TOKEN_DIVEQ   shift, and go to state 61

    $default  reduce using rule 20 (stmt)


State 56

   19 stmt: TOKEN_WHILE expr . TOKEN_COLON TOKEN_NEWLINE indent fill_line
   25 expr: expr . TOKEN_INCEQ expr_or
   26     | expr . TOKEN_DECEQ expr_or
   27     | expr . TOKEN_MULTEQ expr_or
   28     | expr . TOKEN_DIVEQ expr_or

    TOKEN_INCEQ   shift, and go to state 58
    TOKEN_DECEQ   shift, and go to state 59
    TOKEN_MULTEQ  shift, and go to state 60
    TOKEN_DIVEQ   shift, and go to state 61
    TOKEN_COLON   shift, and go to state 87


State 57

    4 line: begin_indent line_type TOKEN_NEWLINE .

    $default  reduce using rule 4 (line)


State 58

   25 expr: expr TOKEN_INCEQ . expr_or

    TOKEN_IDENTIFIER       shift, and go to state 10
    TOKEN_INTEGER_LITERAL  shift, and go to state 11
    TOKEN_BOOL_LITERAL     shift, and go to state 12
    TOKEN_FP_LITERAL       shift, and go to state 13
    TOKEN_STRING_LITERAL   shift, and go to state 14
    TOKEN_LEFT_PAREN       shift, and go to state 15
    TOKEN_NOT              shift, and go to state 16
    TOKEN_MINUS            shift, and go to state 17

    expr_or          go to state 88
    expr_and         go to state 31
    expr_eq          go to state 32
    expr_comp        go to state 33
    expr_add         go to state 34
    expr_mul         go to state 35
    expr_exp         go to state 36
    expr_bool        go to state 37
    expr_minus       go to state 38
    expr_int         go to state 39
    expr_inc         go to state 40
    expr_grp         go to state 41
    value_literals   go to state 42
    non_int_literal  go to state 43
    name             go to state 50


State 59

   26 expr: expr TOKEN_DECEQ . expr_or

    TOKEN_IDENTIFIER       shift, and go to state 10
    TOKEN_INTEGER_LITERAL  shift, and go to state 11
    TOKEN_BOOL_LITERAL     shift, and go to state 12
    TOKEN_FP_LITERAL       shift, and go to state 13
    TOKEN_STRING_LITERAL   shift, and go to state 14
    TOKEN_LEFT_PAREN       shift, and go to state 15
    TOKEN_NOT              shift, and go to state 16
    TOKEN_MINUS            shift, and go to state 17

    expr_or          go to state 89
    expr_and         go to state 31
    expr_eq          go to state 32
    expr_comp        go to state 33
    expr_add         go to state 34
    expr_mul         go to state 35
    expr_exp         go to state 36
    expr_bool        go to state 37
    expr_minus       go to state 38
    expr_int         go to state 39
    expr_inc         go to state 40
    expr_grp         go to state 41
    value_literals   go to state 42
    non_int_literal  go to state 43
    name             go to state 50


State 60

   27 expr: expr TOKEN_MULTEQ . expr_or

    TOKEN_IDENTIFIER       shift, and go to state 10
    TOKEN_INTEGER_LITERAL  shift, and go to state 11
    TOKEN_BOOL_LITERAL     shift, and go to state 12
    TOKEN_FP_LITERAL       shift, and go to state 13
    TOKEN_STRING_LITERAL   shift, and go to state 14
    TOKEN_LEFT_PAREN       shift, and go to state 15
    TOKEN_NOT              shift, and go to state 16
    TOKEN_MINUS            shift, and go to state 17

    expr_or          go to state 90
    expr_and         go to state 31
    expr_eq          go to state 32
    expr_comp        go to state 33
    expr_add         go to state 34
    expr_mul         go to state 35
    expr_exp         go to state 36
    expr_bool        go to state 37
    expr_minus       go to state 38
    expr_int         go to state 39
    expr_inc         go to state 40
    expr_grp         go to state 41
    value_literals   go to state 42
    non_int_literal  go to state 43
    name             go to state 50


State 61

   28 expr: expr TOKEN_DIVEQ . expr_or

    TOKEN_IDENTIFIER       shift, and go to state 10
    TOKEN_INTEGER_LITERAL  shift, and go to state 11
    TOKEN_BOOL_LITERAL     shift, and go to state 12
    TOKEN_FP_LITERAL       shift, and go to state 13
    TOKEN_STRING_LITERAL   shift, and go to state 14
    TOKEN_LEFT_PAREN       shift, and go to state 15
    TOKEN_NOT              shift, and go to state 16
    TOKEN_MINUS            shift, and go to state 17

    expr_or          go to state 91
    expr_and         go to state 31
    expr_eq          go to state 32
    expr_comp        go to state 33
    expr_add         go to state 34
    expr_mul         go to state 35
    expr_exp         go to state 36
    expr_bool        go to state 37
    expr_minus       go to state 38
    expr_int         go to state 39
    expr_inc         go to state 40
    expr_grp         go to state 41
    value_literals   go to state 42
    non_int_literal  go to state 43
    name             go to state 50


State 62

   30 expr_or: expr_or TOKEN_OR . expr_and

    TOKEN_IDENTIFIER       shift, and go to state 10
    TOKEN_INTEGER_LITERAL  shift, and go to state 11
    TOKEN_BOOL_LITERAL     shift, and go to state 12
    TOKEN_FP_LITERAL       shift, and go to state 13
    TOKEN_STRING_LITERAL   shift, and go to state 14
    TOKEN_LEFT_PAREN       shift, and go to state 15
    TOKEN_NOT              shift, and go to state 16
    TOKEN_MINUS            shift, and go to state 17

    expr_and         go to state 92
    expr_eq          go to state 32
    expr_comp        go to state 33
    expr_add         go to state 34
    expr_mul         go to state 35
    expr_exp         go to state 36
    expr_bool        go to state 37
    expr_minus       go to state 38
    expr_int         go to state 39
    expr_inc         go to state 40
    expr_grp         go to state 41
    value_literals   go to state 42
    non_int_literal  go to state 43
    name             go to state 50


State 63

   32 expr_and: expr_and TOKEN_AND . expr_eq

    TOKEN_IDENTIFIER       shift, and go to state 10
    TOKEN_INTEGER_LITERAL  shift, and go to state 11
    TOKEN_BOOL_LITERAL     shift, and go to state 12
    TOKEN_FP_LITERAL       shift, and go to state 13
    TOKEN_STRING_LITERAL   shift, and go to state 14
    TOKEN_LEFT_PAREN       shift, and go to state 15
    TOKEN_NOT              shift, and go to state 16
    TOKEN_MINUS            shift, and go to state 17

    expr_eq          go to state 93
    expr_comp        go to state 33
    expr_add         go to state 34
    expr_mul         go to state 35
    expr_exp         go to state 36
    expr_bool        go to state 37
    expr_minus       go to state 38
    expr_int         go to state 39
    expr_inc         go to state 40
    expr_grp         go to state 41
    value_literals   go to state 42
    non_int_literal  go to state 43
    name             go to state 50


State 64

   34 expr_eq: expr_eq TOKEN_EQ . expr_comp

    TOKEN_IDENTIFIER       shift, and go to state 10
    TOKEN_INTEGER_LITERAL  shift, and go to state 11
    TOKEN_BOOL_LITERAL     shift, and go to state 12
    TOKEN_FP_LITERAL       shift, and go to state 13
    TOKEN_STRING_LITERAL   shift, and go to state 14
    TOKEN_LEFT_PAREN       shift, and go to state 15
    TOKEN_NOT              shift, and go to state 16
    TOKEN_MINUS            shift, and go to state 17

    expr_comp        go to state 94
    expr_add         go to state 34
    expr_mul         go to state 35
    expr_exp         go to state 36
    expr_bool        go to state 37
    expr_minus       go to state 38
    expr_int         go to state 39
    expr_inc         go to state 40
    expr_grp         go to state 41
    value_literals   go to state 42
    non_int_literal  go to state 43
    name             go to state 50


State 65

   35 expr_eq: expr_eq TOKEN_NE . expr_comp

    TOKEN_IDENTIFIER       shift, and go to state 10
    TOKEN_INTEGER_LITERAL  shift, and go to state 11
    TOKEN_BOOL_LITERAL     shift, and go to state 12
    TOKEN_FP_LITERAL       shift, and go to state 13
    TOKEN_STRING_LITERAL   shift, and go to state 14
    TOKEN_LEFT_PAREN       shift, and go to state 15
    TOKEN_NOT              shift, and go to state 16
    TOKEN_MINUS            shift, and go to state 17

    expr_comp        go to state 95
    expr_add         go to state 34
    expr_mul         go to state 35
    expr_exp         go to state 36
    expr_bool        go to state 37
    expr_minus       go to state 38
    expr_int         go to state 39
    expr_inc         go to state 40
    expr_grp         go to state 41
    value_literals   go to state 42
    non_int_literal  go to state 43
    name             go to state 50


State 66

   37 expr_comp: expr_comp TOKEN_LT . expr_add

    TOKEN_IDENTIFIER       shift, and go to state 10
    TOKEN_INTEGER_LITERAL  shift, and go to state 11
    TOKEN_BOOL_LITERAL     shift, and go to state 12
    TOKEN_FP_LITERAL       shift, and go to state 13
    TOKEN_STRING_LITERAL   shift, and go to state 14
    TOKEN_LEFT_PAREN       shift, and go to state 15
    TOKEN_NOT              shift, and go to state 16
    TOKEN_MINUS            shift, and go to state 17

    expr_add         go to state 96
    expr_mul         go to state 35
    expr_exp         go to state 36
    expr_bool        go to state 37
    expr_minus       go to state 38
    expr_int         go to state 39
    expr_inc         go to state 40
    expr_grp         go to state 41
    value_literals   go to state 42
    non_int_literal  go to state 43
    name             go to state 50


State 67

   38 expr_comp: expr_comp TOKEN_LE . expr_add

    TOKEN_IDENTIFIER       shift, and go to state 10
    TOKEN_INTEGER_LITERAL  shift, and go to state 11
    TOKEN_BOOL_LITERAL     shift, and go to state 12
    TOKEN_FP_LITERAL       shift, and go to state 13
    TOKEN_STRING_LITERAL   shift, and go to state 14
    TOKEN_LEFT_PAREN       shift, and go to state 15
    TOKEN_NOT              shift, and go to state 16
    TOKEN_MINUS            shift, and go to state 17

    expr_add         go to state 97
    expr_mul         go to state 35
    expr_exp         go to state 36
    expr_bool        go to state 37
    expr_minus       go to state 38
    expr_int         go to state 39
    expr_inc         go to state 40
    expr_grp         go to state 41
    value_literals   go to state 42
    non_int_literal  go to state 43
    name             go to state 50


State 68

   39 expr_comp: expr_comp TOKEN_GT . expr_add

    TOKEN_IDENTIFIER       shift, and go to state 10
    TOKEN_INTEGER_LITERAL  shift, and go to state 11
    TOKEN_BOOL_LITERAL     shift, and go to state 12
    TOKEN_FP_LITERAL       shift, and go to state 13
    TOKEN_STRING_LITERAL   shift, and go to state 14
    TOKEN_LEFT_PAREN       shift, and go to state 15
    TOKEN_NOT              shift, and go to state 16
    TOKEN_MINUS            shift, and go to state 17

    expr_add         go to state 98
    expr_mul         go to state 35
    expr_exp         go to state 36
    expr_bool        go to state 37
    expr_minus       go to state 38
    expr_int         go to state 39
    expr_inc         go to state 40
    expr_grp         go to state 41
    value_literals   go to state 42
    non_int_literal  go to state 43
    name             go to state 50


State 69

   40 expr_comp: expr_comp TOKEN_GE . expr_add

    TOKEN_IDENTIFIER       shift, and go to state 10
    TOKEN_INTEGER_LITERAL  shift, and go to state 11
    TOKEN_BOOL_LITERAL     shift, and go to state 12
    TOKEN_FP_LITERAL       shift, and go to state 13
    TOKEN_STRING_LITERAL   shift, and go to state 14
    TOKEN_LEFT_PAREN       shift, and go to state 15
    TOKEN_NOT              shift, and go to state 16
    TOKEN_MINUS            shift, and go to state 17

    expr_add         go to state 99
    expr_mul         go to state 35
    expr_exp         go to state 36
    expr_bool        go to state 37
    expr_minus       go to state 38
    expr_int         go to state 39
    expr_inc         go to state 40
    expr_grp         go to state 41
    value_literals   go to state 42
    non_int_literal  go to state 43
    name             go to state 50


State 70

   42 expr_add: expr_add TOKEN_ADD . expr_mul

    TOKEN_IDENTIFIER       shift, and go to state 10
    TOKEN_INTEGER_LITERAL  shift, and go to state 11
    TOKEN_BOOL_LITERAL     shift, and go to state 12
    TOKEN_FP_LITERAL       shift, and go to state 13
    TOKEN_STRING_LITERAL   shift, and go to state 14
    TOKEN_LEFT_PAREN       shift, and go to state 15
    TOKEN_NOT              shift, and go to state 16
    TOKEN_MINUS            shift, and go to state 17

    expr_mul         go to state 100
    expr_exp         go to state 36
    expr_bool        go to state 37
    expr_minus       go to state 38
    expr_int         go to state 39
    expr_inc         go to state 40
    expr_grp         go to state 41
    value_literals   go to state 42
    non_int_literal  go to state 43
    name             go to state 50


State 71

   43 expr_add: expr_add TOKEN_MINUS . expr_mul

    TOKEN_IDENTIFIER       shift, and go to state 10
    TOKEN_INTEGER_LITERAL  shift, and go to state 11
    TOKEN_BOOL_LITERAL     shift, and go to state 12
    TOKEN_FP_LITERAL       shift, and go to state 13
    TOKEN_STRING_LITERAL   shift, and go to state 14
    TOKEN_LEFT_PAREN       shift, and go to state 15
    TOKEN_NOT              shift, and go to state 16
    TOKEN_MINUS            shift, and go to state 17

    expr_mul         go to state 101
    expr_exp         go to state 36
    expr_bool        go to state 37
    expr_minus       go to state 38
    expr_int         go to state 39
    expr_inc         go to state 40
    expr_grp         go to state 41
    value_literals   go to state 42
    non_int_literal  go to state 43
    name             go to state 50


State 72

   45 expr_mul: expr_mul TOKEN_MULTIPLY . expr_exp

    TOKEN_IDENTIFIER       shift, and go to state 10
    TOKEN_INTEGER_LITERAL  shift, and go to state 11
    TOKEN_BOOL_LITERAL     shift, and go to state 12
    TOKEN_FP_LITERAL       shift, and go to state 13
    TOKEN_STRING_LITERAL   shift, and go to state 14
    TOKEN_LEFT_PAREN       shift, and go to state 15
    TOKEN_NOT              shift, and go to state 16
    TOKEN_MINUS            shift, and go to state 17

    expr_exp         go to state 102
    expr_bool        go to state 37
    expr_minus       go to state 38
    expr_int         go to state 39
    expr_inc         go to state 40
    expr_grp         go to state 41
    value_literals   go to state 42
    non_int_literal  go to state 43
    name             go to state 50


State 73

   46 expr_mul: expr_mul TOKEN_DIVIDE . expr_exp

    TOKEN_IDENTIFIER       shift, and go to state 10
    TOKEN_INTEGER_LITERAL  shift, and go to state 11
    TOKEN_BOOL_LITERAL     shift, and go to state 12
    TOKEN_FP_LITERAL       shift, and go to state 13
    TOKEN_STRING_LITERAL   shift, and go to state 14
    TOKEN_LEFT_PAREN       shift, and go to state 15
    TOKEN_NOT              shift, and go to state 16
    TOKEN_MINUS            shift, and go to state 17

    expr_exp         go to state 103
    expr_bool        go to state 37
    expr_minus       go to state 38
    expr_int         go to state 39
    expr_inc         go to state 40
    expr_grp         go to state 41
    value_literals   go to state 42
    non_int_literal  go to state 43
    name             go to state 50


State 74

   47 expr_mul: expr_mul TOKEN_MOD . expr_exp

    TOKEN_IDENTIFIER       shift, and go to state 10
    TOKEN_INTEGER_LITERAL  shift, and go to state 11
    TOKEN_BOOL_LITERAL     shift, and go to state 12
    TOKEN_FP_LITERAL       shift, and go to state 13
    TOKEN_STRING_LITERAL   shift, and go to state 14
    TOKEN_LEFT_PAREN       shift, and go to state 15
    TOKEN_NOT              shift, and go to state 16
    TOKEN_MINUS            shift, and go to state 17

    expr_exp         go to state 104
    expr_bool        go to state 37
    expr_minus       go to state 38
    expr_int         go to state 39
    expr_inc         go to state 40
    expr_grp         go to state 41
    value_literals   go to state 42
    non_int_literal  go to state 43
    name             go to state 50


State 75

   49 expr_exp: expr_exp TOKEN_EXPONENT . expr_bool

    TOKEN_IDENTIFIER       shift, and go to state 10
    TOKEN_INTEGER_LITERAL  shift, and go to state 11
    TOKEN_BOOL_LITERAL     shift, and go to state 12
    TOKEN_FP_LITERAL       shift, and go to state 13
    TOKEN_STRING_LITERAL   shift, and go to state 14
    TOKEN_LEFT_PAREN       shift, and go to state 15
    TOKEN_NOT              shift, and go to state 16
    TOKEN_MINUS            shift, and go to state 17

    expr_bool        go to state 105
    expr_minus       go to state 38
    expr_int         go to state 39
    expr_inc         go to state 40
    expr_grp         go to state 41
    value_literals   go to state 42
    non_int_literal  go to state 43
    name             go to state 50


State 76

   59 expr_inc: expr_inc TOKEN_INCREMENT .

    $default  reduce using rule 59 (expr_inc)


State 77

   60 expr_inc: expr_inc TOKEN_DECREMENT .

    $default  reduce using rule 60 (expr_inc)


State 78

   64 expr_grp: name TOKEN_LEFT_PAREN . expr_list TOKEN_RIGHT_PAREN

    TOKEN_IDENTIFIER       shift, and go to state 10
    TOKEN_INTEGER_LITERAL  shift, and go to state 11
    TOKEN_BOOL_LITERAL     shift, and go to state 12
    TOKEN_FP_LITERAL       shift, and go to state 13
    TOKEN_STRING_LITERAL   shift, and go to state 14
    TOKEN_LEFT_PAREN       shift, and go to state 15
    TOKEN_NOT              shift, and go to state 16
    TOKEN_MINUS            shift, and go to state 17

    $default  reduce using rule 67 (expr_list)

    expr             go to state 106
    expr_or          go to state 30
    expr_and         go to state 31
    expr_eq          go to state 32
    expr_comp        go to state 33
    expr_add         go to state 34
    expr_mul         go to state 35
    expr_exp         go to state 36
    expr_bool        go to state 37
    expr_minus       go to state 38
    expr_int         go to state 39
    expr_inc         go to state 40
    expr_grp         go to state 41
    expr_list        go to state 107
    value_literals   go to state 42
    non_int_literal  go to state 43
    name             go to state 46


State 79

   12 decl: name TOKEN_ASSIGN . TOKEN_FUNCTION TOKEN_LEFT_PAREN arg_list TOKEN_RIGHT_PAREN TOKEN_COLON TOKEN_NEWLINE indent fill_line
   24 expr: name TOKEN_ASSIGN . expr_or

    TOKEN_IDENTIFIER       shift, and go to state 10
    TOKEN_INTEGER_LITERAL  shift, and go to state 11
    TOKEN_BOOL_LITERAL     shift, and go to state 12
    TOKEN_FP_LITERAL       shift, and go to state 13
    TOKEN_STRING_LITERAL   shift, and go to state 14
    TOKEN_LEFT_PAREN       shift, and go to state 15
    TOKEN_NOT              shift, and go to state 16
    TOKEN_MINUS            shift, and go to state 17
    TOKEN_FUNCTION         shift, and go to state 108

    expr_or          go to state 109
    expr_and         go to state 31
    expr_eq          go to state 32
    expr_comp        go to state 33
    expr_add         go to state 34
    expr_mul         go to state 35
    expr_exp         go to state 36
    expr_bool        go to state 37
    expr_minus       go to state 38
    expr_int         go to state 39
    expr_inc         go to state 40
    expr_grp         go to state 41
    value_literals   go to state 42
    non_int_literal  go to state 43
    name             go to state 50


State 80

   13 decl: name TOKEN_DEFINITION . expr

    TOKEN_IDENTIFIER       shift, and go to state 10
    TOKEN_INTEGER_LITERAL  shift, and go to state 11
    TOKEN_BOOL_LITERAL     shift, and go to state 12
    TOKEN_FP_LITERAL       shift, and go to state 13
    TOKEN_STRING_LITERAL   shift, and go to state 14
    TOKEN_LEFT_PAREN       shift, and go to state 15
    TOKEN_NOT              shift, and go to state 16
    TOKEN_MINUS            shift, and go to state 17

    expr             go to state 110
    expr_or          go to state 30
    expr_and         go to state 31
    expr_eq          go to state 32
    expr_comp        go to state 33
    expr_add         go to state 34
    expr_mul         go to state 35
    expr_exp         go to state 36
    expr_bool        go to state 37
    expr_minus       go to state 38
    expr_int         go to state 39
    expr_inc         go to state 40
    expr_grp         go to state 41
    value_literals   go to state 42
    non_int_literal  go to state 43
    name             go to state 46


State 81

   62 expr_grp: TOKEN_LEFT_PAREN expr TOKEN_RIGHT_PAREN .

    $default  reduce using rule 62 (expr_grp)


State 82

   24 expr: name TOKEN_ASSIGN . expr_or

    TOKEN_IDENTIFIER       shift, and go to state 10
    TOKEN_INTEGER_LITERAL  shift, and go to state 11
    TOKEN_BOOL_LITERAL     shift, and go to state 12
    TOKEN_FP_LITERAL       shift, and go to state 13
    TOKEN_STRING_LITERAL   shift, and go to state 14
    TOKEN_LEFT_PAREN       shift, and go to state 15
    TOKEN_NOT              shift, and go to state 16
    TOKEN_MINUS            shift, and go to state 17

    expr_or          go to state 109
    expr_and         go to state 31
    expr_eq          go to state 32
    expr_comp        go to state 33
    expr_add         go to state 34
    expr_mul         go to state 35
    expr_exp         go to state 36
    expr_bool        go to state 37
    expr_minus       go to state 38
    expr_int         go to state 39
    expr_inc         go to state 40
    expr_grp         go to state 41
    value_literals   go to state 42
    non_int_literal  go to state 43
    name             go to state 50


State 83

   15 stmt: TOKEN_PRINT TOKEN_LEFT_PAREN expr . TOKEN_RIGHT_PAREN
   25 expr: expr . TOKEN_INCEQ expr_or
   26     | expr . TOKEN_DECEQ expr_or
   27     | expr . TOKEN_MULTEQ expr_or
   28     | expr . TOKEN_DIVEQ expr_or

    TOKEN_RIGHT_PAREN  shift, and go to state 111
    TOKEN_INCEQ        shift, and go to state 58
    TOKEN_DECEQ        shift, and go to state 59
    TOKEN_MULTEQ       shift, and go to state 60
    TOKEN_DIVEQ        shift, and go to state 61


State 84

   16 stmt: TOKEN_IF expr TOKEN_COLON . TOKEN_NEWLINE indent fill_line

    TOKEN_NEWLINE  shift, and go to state 112


State 85

   17 stmt: TOKEN_ELSE TOKEN_IF expr . TOKEN_COLON TOKEN_NEWLINE indent fill_line
   25 expr: expr . TOKEN_INCEQ expr_or
   26     | expr . TOKEN_DECEQ expr_or
   27     | expr . TOKEN_MULTEQ expr_or
   28     | expr . TOKEN_DIVEQ expr_or

    TOKEN_INCEQ   shift, and go to state 58
    TOKEN_DECEQ   shift, and go to state 59
    TOKEN_MULTEQ  shift, and go to state 60
    TOKEN_DIVEQ   shift, and go to state 61
    TOKEN_COLON   shift, and go to state 113


State 86

   18 stmt: TOKEN_ELSE TOKEN_COLON TOKEN_NEWLINE . indent fill_line

    TOKEN_INDENT_TAB    shift, and go to state 114
    TOKEN_INDENT_SPACE  shift, and go to state 115

    indent  go to state 116


State 87

   19 stmt: TOKEN_WHILE expr TOKEN_COLON . TOKEN_NEWLINE indent fill_line

    TOKEN_NEWLINE  shift, and go to state 117


State 88

   25 expr: expr TOKEN_INCEQ expr_or .
   30 expr_or: expr_or . TOKEN_OR expr_and

    TOKEN_OR  shift, and go to state 62

    $default  reduce using rule 25 (expr)


State 89

   26 expr: expr TOKEN_DECEQ expr_or .
   30 expr_or: expr_or . TOKEN_OR expr_and

    TOKEN_OR  shift, and go to state 62

    $default  reduce using rule 26 (expr)


State 90

   27 expr: expr TOKEN_MULTEQ expr_or .
   30 expr_or: expr_or . TOKEN_OR expr_and

    TOKEN_OR  shift, and go to state 62

    $default  reduce using rule 27 (expr)


State 91

   28 expr: expr TOKEN_DIVEQ expr_or .
   30 expr_or: expr_or . TOKEN_OR expr_and

    TOKEN_OR  shift, and go to state 62

    $default  reduce using rule 28 (expr)


State 92

   30 expr_or: expr_or TOKEN_OR expr_and .
   32 expr_and: expr_and . TOKEN_AND expr_eq

    TOKEN_AND  shift, and go to state 63

    $default  reduce using rule 30 (expr_or)


State 93

   32 expr_and: expr_and TOKEN_AND expr_eq .
   34 expr_eq: expr_eq . TOKEN_EQ expr_comp
   35        | expr_eq . TOKEN_NE expr_comp

    TOKEN_EQ  shift, and go to state 64
    TOKEN_NE  shift, and go to state 65

    $default  reduce using rule 32 (expr_and)


State 94

   34 expr_eq: expr_eq TOKEN_EQ expr_comp .
   37 expr_comp: expr_comp . TOKEN_LT expr_add
   38          | expr_comp . TOKEN_LE expr_add
   39          | expr_comp . TOKEN_GT expr_add
   40          | expr_comp . TOKEN_GE expr_add

    TOKEN_LT  shift, and go to state 66
    TOKEN_LE  shift, and go to state 67
    TOKEN_GT  shift, and go to state 68
    TOKEN_GE  shift, and go to state 69

    $default  reduce using rule 34 (expr_eq)


State 95

   35 expr_eq: expr_eq TOKEN_NE expr_comp .
   37 expr_comp: expr_comp . TOKEN_LT expr_add
   38          | expr_comp . TOKEN_LE expr_add
   39          | expr_comp . TOKEN_GT expr_add
   40          | expr_comp . TOKEN_GE expr_add

    TOKEN_LT  shift, and go to state 66
    TOKEN_LE  shift, and go to state 67
    TOKEN_GT  shift, and go to state 68
    TOKEN_GE  shift, and go to state 69

    $default  reduce using rule 35 (expr_eq)


State 96

   37 expr_comp: expr_comp TOKEN_LT expr_add .
   42 expr_add: expr_add . TOKEN_ADD expr_mul
   43         | expr_add . TOKEN_MINUS expr_mul

    TOKEN_ADD    shift, and go to state 70
    TOKEN_MINUS  shift, and go to state 71

    $default  reduce using rule 37 (expr_comp)


State 97

   38 expr_comp: expr_comp TOKEN_LE expr_add .
   42 expr_add: expr_add . TOKEN_ADD expr_mul
   43         | expr_add . TOKEN_MINUS expr_mul

    TOKEN_ADD    shift, and go to state 70
    TOKEN_MINUS  shift, and go to state 71

    $default  reduce using rule 38 (expr_comp)


State 98

   39 expr_comp: expr_comp TOKEN_GT expr_add .
   42 expr_add: expr_add . TOKEN_ADD expr_mul
   43         | expr_add . TOKEN_MINUS expr_mul

    TOKEN_ADD    shift, and go to state 70
    TOKEN_MINUS  shift, and go to state 71

    $default  reduce using rule 39 (expr_comp)


State 99

   40 expr_comp: expr_comp TOKEN_GE expr_add .
   42 expr_add: expr_add . TOKEN_ADD expr_mul
   43         | expr_add . TOKEN_MINUS expr_mul

    TOKEN_ADD    shift, and go to state 70
    TOKEN_MINUS  shift, and go to state 71

    $default  reduce using rule 40 (expr_comp)


State 100

   42 expr_add: expr_add TOKEN_ADD expr_mul .
   45 expr_mul: expr_mul . TOKEN_MULTIPLY expr_exp
   46         | expr_mul . TOKEN_DIVIDE expr_exp
   47         | expr_mul . TOKEN_MOD expr_exp

    TOKEN_MULTIPLY  shift, and go to state 72
    TOKEN_DIVIDE    shift, and go to state 73
    TOKEN_MOD       shift, and go to state 74

    $default  reduce using rule 42 (expr_add)


State 101

   43 expr_add: expr_add TOKEN_MINUS expr_mul .
   45 expr_mul: expr_mul . TOKEN_MULTIPLY expr_exp
   46         | expr_mul . TOKEN_DIVIDE expr_exp
   47         | expr_mul . TOKEN_MOD expr_exp

    TOKEN_MULTIPLY  shift, and go to state 72
    TOKEN_DIVIDE    shift, and go to state 73
    TOKEN_MOD       shift, and go to state 74

    $default  reduce using rule 43 (expr_add)


State 102

   45 expr_mul: expr_mul TOKEN_MULTIPLY expr_exp .
   49 expr_exp: expr_exp . TOKEN_EXPONENT expr_bool

    TOKEN_EXPONENT  shift, and go to state 75

    $default  reduce using rule 45 (expr_mul)


State 103

   46 expr_mul: expr_mul TOKEN_DIVIDE expr_exp .
   49 expr_exp: expr_exp . TOKEN_EXPONENT expr_bool

    TOKEN_EXPONENT  shift, and go to state 75

    $default  reduce using rule 46 (expr_mul)


State 104

   47 expr_mul: expr_mul TOKEN_MOD expr_exp .
   49 expr_exp: expr_exp . TOKEN_EXPONENT expr_bool

    TOKEN_EXPONENT  shift, and go to state 75

    $default  reduce using rule 47 (expr_mul)


State 105

   49 expr_exp: expr_exp TOKEN_EXPONENT expr_bool .

    $default  reduce using rule 49 (expr_exp)


State 106

   25 expr: expr . TOKEN_INCEQ expr_or
   26     | expr . TOKEN_DECEQ expr_or
   27     | expr . TOKEN_MULTEQ expr_or
   28     | expr . TOKEN_DIVEQ expr_or
   65 expr_list: expr . TOKEN_COMMA expr_list
   66          | expr .

    TOKEN_INCEQ   shift, and go to state 58
    TOKEN_DECEQ   shift, and go to state 59
    TOKEN_MULTEQ  shift, and go to state 60
    TOKEN_DIVEQ   shift, and go to state 61
    TOKEN_COMMA   shift, and go to state 118

    $default  reduce using rule 66 (expr_list)


State 107

   64 expr_grp: name TOKEN_LEFT_PAREN expr_list . TOKEN_RIGHT_PAREN

    TOKEN_RIGHT_PAREN  shift, and go to state 119


State 108

   12 decl: name TOKEN_ASSIGN TOKEN_FUNCTION . TOKEN_LEFT_PAREN arg_list TOKEN_RIGHT_PAREN TOKEN_COLON TOKEN_NEWLINE indent fill_line

    TOKEN_LEFT_PAREN  shift, and go to state 120


State 109

   24 expr: name TOKEN_ASSIGN expr_or .
   30 expr_or: expr_or . TOKEN_OR expr_and

    TOKEN_OR  shift, and go to state 62

    $default  reduce using rule 24 (expr)


State 110

   13 decl: name TOKEN_DEFINITION expr .
   25 expr: expr . TOKEN_INCEQ expr_or
   26     | expr . TOKEN_DECEQ expr_or
   27     | expr . TOKEN_MULTEQ expr_or
   28     | expr . TOKEN_DIVEQ expr_or

    TOKEN_INCEQ   shift, and go to state 58
    TOKEN_DECEQ   shift, and go to state 59
    TOKEN_MULTEQ  shift, and go to state 60
    TOKEN_DIVEQ   shift, and go to state 61

    $default  reduce using rule 13 (decl)


State 111

   15 stmt: TOKEN_PRINT TOKEN_LEFT_PAREN expr TOKEN_RIGHT_PAREN .

    $default  reduce using rule 15 (stmt)


State 112

   16 stmt: TOKEN_IF expr TOKEN_COLON TOKEN_NEWLINE . indent fill_line

    TOKEN_INDENT_TAB    shift, and go to state 114
    TOKEN_INDENT_SPACE  shift, and go to state 115

    indent  go to state 121


State 113

   17 stmt: TOKEN_ELSE TOKEN_IF expr TOKEN_COLON . TOKEN_NEWLINE indent fill_line

    TOKEN_NEWLINE  shift, and go to state 122


State 114

   68 indent: TOKEN_INDENT_TAB .

    $default  reduce using rule 68 (indent)


State 115

   69 indent: TOKEN_INDENT_SPACE .

    $default  reduce using rule 69 (indent)


State 116

   18 stmt: TOKEN_ELSE TOKEN_COLON TOKEN_NEWLINE indent . fill_line

    TOKEN_IDENTIFIER       shift, and go to state 10
    TOKEN_INTEGER_LITERAL  shift, and go to state 11
    TOKEN_BOOL_LITERAL     shift, and go to state 12
    TOKEN_FP_LITERAL       shift, and go to state 13
    TOKEN_STRING_LITERAL   shift, and go to state 14
    TOKEN_LEFT_PAREN       shift, and go to state 15
    TOKEN_NOT              shift, and go to state 16
    TOKEN_MINUS            shift, and go to state 17
    TOKEN_PRINT            shift, and go to state 18
    TOKEN_NEWLINE          shift, and go to state 123
    TOKEN_IF               shift, and go to state 19
    TOKEN_ELSE             shift, and go to state 20
    TOKEN_RETURN           shift, and go to state 21
    TOKEN_WHILE            shift, and go to state 22
    TOKEN_BREAK            shift, and go to state 23
    TOKEN_PASS             shift, and go to state 124
    TOKEN_CONTINUE         shift, and go to state 24

    fill_line        go to state 125
    decl             go to state 126
    stmt             go to state 127
    loop_control     go to state 28
    expr             go to state 29
    expr_or          go to state 30
    expr_and         go to state 31
    expr_eq          go to state 32
    expr_comp        go to state 33
    expr_add         go to state 34
    expr_mul         go to state 35
    expr_exp         go to state 36
    expr_bool        go to state 37
    expr_minus       go to state 38
    expr_int         go to state 39
    expr_inc         go to state 40
    expr_grp         go to state 41
    value_literals   go to state 42
    non_int_literal  go to state 43
    name             go to state 44


State 117

   19 stmt: TOKEN_WHILE expr TOKEN_COLON TOKEN_NEWLINE . indent fill_line

    TOKEN_INDENT_TAB    shift, and go to state 114
    TOKEN_INDENT_SPACE  shift, and go to state 115

    indent  go to state 128


State 118

   65 expr_list: expr TOKEN_COMMA . expr_list

    TOKEN_IDENTIFIER       shift, and go to state 10
    TOKEN_INTEGER_LITERAL  shift, and go to state 11
    TOKEN_BOOL_LITERAL     shift, and go to state 12
    TOKEN_FP_LITERAL       shift, and go to state 13
    TOKEN_STRING_LITERAL   shift, and go to state 14
    TOKEN_LEFT_PAREN       shift, and go to state 15
    TOKEN_NOT              shift, and go to state 16
    TOKEN_MINUS            shift, and go to state 17

    $default  reduce using rule 67 (expr_list)

    expr             go to state 106
    expr_or          go to state 30
    expr_and         go to state 31
    expr_eq          go to state 32
    expr_comp        go to state 33
    expr_add         go to state 34
    expr_mul         go to state 35
    expr_exp         go to state 36
    expr_bool        go to state 37
    expr_minus       go to state 38
    expr_int         go to state 39
    expr_inc         go to state 40
    expr_grp         go to state 41
    expr_list        go to state 129
    value_literals   go to state 42
    non_int_literal  go to state 43
    name             go to state 46


State 119

   64 expr_grp: name TOKEN_LEFT_PAREN expr_list TOKEN_RIGHT_PAREN .

    $default  reduce using rule 64 (expr_grp)


State 120

   12 decl: name TOKEN_ASSIGN TOKEN_FUNCTION TOKEN_LEFT_PAREN . arg_list TOKEN_RIGHT_PAREN TOKEN_COLON TOKEN_NEWLINE indent fill_line

    TOKEN_IDENTIFIER  shift, and go to state 10

    $default  reduce using rule 75 (arg_list)

    arg_list  go to state 130
    name      go to state 131


State 121

   16 stmt: TOKEN_IF expr TOKEN_COLON TOKEN_NEWLINE indent . fill_line

    TOKEN_IDENTIFIER       shift, and go to state 10
    TOKEN_INTEGER_LITERAL  shift, and go to state 11
    TOKEN_BOOL_LITERAL     shift, and go to state 12
    TOKEN_FP_LITERAL       shift, and go to state 13
    TOKEN_STRING_LITERAL   shift, and go to state 14
    TOKEN_LEFT_PAREN       shift, and go to state 15
    TOKEN_NOT              shift, and go to state 16
    TOKEN_MINUS            shift, and go to state 17
    TOKEN_PRINT            shift, and go to state 18
    TOKEN_NEWLINE          shift, and go to state 123
    TOKEN_IF               shift, and go to state 19
    TOKEN_ELSE             shift, and go to state 20
    TOKEN_RETURN           shift, and go to state 21
    TOKEN_WHILE            shift, and go to state 22
    TOKEN_BREAK            shift, and go to state 23
    TOKEN_PASS             shift, and go to state 124
    TOKEN_CONTINUE         shift, and go to state 24

    fill_line        go to state 132
    decl             go to state 126
    stmt             go to state 127
    loop_control     go to state 28
    expr             go to state 29
    expr_or          go to state 30
    expr_and         go to state 31
    expr_eq          go to state 32
    expr_comp        go to state 33
    expr_add         go to state 34
    expr_mul         go to state 35
    expr_exp         go to state 36
    expr_bool        go to state 37
    expr_minus       go to state 38
    expr_int         go to state 39
    expr_inc         go to state 40
    expr_grp         go to state 41
    value_literals   go to state 42
    non_int_literal  go to state 43
    name             go to state 44


State 122

   17 stmt: TOKEN_ELSE TOKEN_IF expr TOKEN_COLON TOKEN_NEWLINE . indent fill_line

    TOKEN_INDENT_TAB    shift, and go to state 114
    TOKEN_INDENT_SPACE  shift, and go to state 115

    indent  go to state 133


State 123

   11 fill_line: TOKEN_NEWLINE . indent fill_line

    TOKEN_INDENT_TAB    shift, and go to state 114
    TOKEN_INDENT_SPACE  shift, and go to state 115

    indent  go to state 134


State 124

   10 fill_line: TOKEN_PASS .

    $default  reduce using rule 10 (fill_line)


State 125

   18 stmt: TOKEN_ELSE TOKEN_COLON TOKEN_NEWLINE indent fill_line .

    $default  reduce using rule 18 (stmt)


State 126

    8 fill_line: decl .

    $default  reduce using rule 8 (fill_line)


State 127

    9 fill_line: stmt .

    $default  reduce using rule 9 (fill_line)


State 128

   19 stmt: TOKEN_WHILE expr TOKEN_COLON TOKEN_NEWLINE indent . fill_line

    TOKEN_IDENTIFIER       shift, and go to state 10
    TOKEN_INTEGER_LITERAL  shift, and go to state 11
    TOKEN_BOOL_LITERAL     shift, and go to state 12
    TOKEN_FP_LITERAL       shift, and go to state 13
    TOKEN_STRING_LITERAL   shift, and go to state 14
    TOKEN_LEFT_PAREN       shift, and go to state 15
    TOKEN_NOT              shift, and go to state 16
    TOKEN_MINUS            shift, and go to state 17
    TOKEN_PRINT            shift, and go to state 18
    TOKEN_NEWLINE          shift, and go to state 123
    TOKEN_IF               shift, and go to state 19
    TOKEN_ELSE             shift, and go to state 20
    TOKEN_RETURN           shift, and go to state 21
    TOKEN_WHILE            shift, and go to state 22
    TOKEN_BREAK            shift, and go to state 23
    TOKEN_PASS             shift, and go to state 124
    TOKEN_CONTINUE         shift, and go to state 24

    fill_line        go to state 135
    decl             go to state 126
    stmt             go to state 127
    loop_control     go to state 28
    expr             go to state 29
    expr_or          go to state 30
    expr_and         go to state 31
    expr_eq          go to state 32
    expr_comp        go to state 33
    expr_add         go to state 34
    expr_mul         go to state 35
    expr_exp         go to state 36
    expr_bool        go to state 37
    expr_minus       go to state 38
    expr_int         go to state 39
    expr_inc         go to state 40
    expr_grp         go to state 41
    value_literals   go to state 42
    non_int_literal  go to state 43
    name             go to state 44


State 129

   65 expr_list: expr TOKEN_COMMA expr_list .

    $default  reduce using rule 65 (expr_list)


State 130

   12 decl: name TOKEN_ASSIGN TOKEN_FUNCTION TOKEN_LEFT_PAREN arg_list . TOKEN_RIGHT_PAREN TOKEN_COLON TOKEN_NEWLINE indent fill_line

    TOKEN_RIGHT_PAREN  shift, and go to state 136


State 131

   73 arg_list: name . TOKEN_COMMA arg_list
   74         | name .

    TOKEN_COMMA  shift, and go to state 137

    $default  reduce using rule 74 (arg_list)


State 132

   16 stmt: TOKEN_IF expr TOKEN_COLON TOKEN_NEWLINE indent fill_line .

    $default  reduce using rule 16 (stmt)


State 133

   17 stmt: TOKEN_ELSE TOKEN_IF expr TOKEN_COLON TOKEN_NEWLINE indent . fill_line

    TOKEN_IDENTIFIER       shift, and go to state 10
    TOKEN_INTEGER_LITERAL  shift, and go to state 11
    TOKEN_BOOL_LITERAL     shift, and go to state 12
    TOKEN_FP_LITERAL       shift, and go to state 13
    TOKEN_STRING_LITERAL   shift, and go to state 14
    TOKEN_LEFT_PAREN       shift, and go to state 15
    TOKEN_NOT              shift, and go to state 16
    TOKEN_MINUS            shift, and go to state 17
    TOKEN_PRINT            shift, and go to state 18
    TOKEN_NEWLINE          shift, and go to state 123
    TOKEN_IF               shift, and go to state 19
    TOKEN_ELSE             shift, and go to state 20
    TOKEN_RETURN           shift, and go to state 21
    TOKEN_WHILE            shift, and go to state 22
    TOKEN_BREAK            shift, and go to state 23
    TOKEN_PASS             shift, and go to state 124
    TOKEN_CONTINUE         shift, and go to state 24

    fill_line        go to state 138
    decl             go to state 126
    stmt             go to state 127
    loop_control     go to state 28
    expr             go to state 29
    expr_or          go to state 30
    expr_and         go to state 31
    expr_eq          go to state 32
    expr_comp        go to state 33
    expr_add         go to state 34
    expr_mul         go to state 35
    expr_exp         go to state 36
    expr_bool        go to state 37
    expr_minus       go to state 38
    expr_int         go to state 39
    expr_inc         go to state 40
    expr_grp         go to state 41
    value_literals   go to state 42
    non_int_literal  go to state 43
    name             go to state 44


State 134

   11 fill_line: TOKEN_NEWLINE indent . fill_line

    TOKEN_IDENTIFIER       shift, and go to state 10
    TOKEN_INTEGER_LITERAL  shift, and go to state 11
    TOKEN_BOOL_LITERAL     shift, and go to state 12
    TOKEN_FP_LITERAL       shift, and go to state 13
    TOKEN_STRING_LITERAL   shift, and go to state 14
    TOKEN_LEFT_PAREN       shift, and go to state 15
    TOKEN_NOT              shift, and go to state 16
    TOKEN_MINUS            shift, and go to state 17
    TOKEN_PRINT            shift, and go to state 18
    TOKEN_NEWLINE          shift, and go to state 123
    TOKEN_IF               shift, and go to state 19
    TOKEN_ELSE             shift, and go to state 20
    TOKEN_RETURN           shift, and go to state 21
    TOKEN_WHILE            shift, and go to state 22
    TOKEN_BREAK            shift, and go to state 23
    TOKEN_PASS             shift, and go to state 124
    TOKEN_CONTINUE         shift, and go to state 24

    fill_line        go to state 139
    decl             go to state 126
    stmt             go to state 127
    loop_control     go to state 28
    expr             go to state 29
    expr_or          go to state 30
    expr_and         go to state 31
    expr_eq          go to state 32
    expr_comp        go to state 33
    expr_add         go to state 34
    expr_mul         go to state 35
    expr_exp         go to state 36
    expr_bool        go to state 37
    expr_minus       go to state 38
    expr_int         go to state 39
    expr_inc         go to state 40
    expr_grp         go to state 41
    value_literals   go to state 42
    non_int_literal  go to state 43
    name             go to state 44


State 135

   19 stmt: TOKEN_WHILE expr TOKEN_COLON TOKEN_NEWLINE indent fill_line .

    $default  reduce using rule 19 (stmt)


State 136

   12 decl: name TOKEN_ASSIGN TOKEN_FUNCTION TOKEN_LEFT_PAREN arg_list TOKEN_RIGHT_PAREN . TOKEN_COLON TOKEN_NEWLINE indent fill_line

    TOKEN_COLON  shift, and go to state 140


State 137

   73 arg_list: name TOKEN_COMMA . arg_list

    TOKEN_IDENTIFIER  shift, and go to state 10

    $default  reduce using rule 75 (arg_list)

    arg_list  go to state 141
    name      go to state 131


State 138

   17 stmt: TOKEN_ELSE TOKEN_IF expr TOKEN_COLON TOKEN_NEWLINE indent fill_line .

    $default  reduce using rule 17 (stmt)


State 139

   11 fill_line: TOKEN_NEWLINE indent fill_line .

    $default  reduce using rule 11 (fill_line)


State 140

   12 decl: name TOKEN_ASSIGN TOKEN_FUNCTION TOKEN_LEFT_PAREN arg_list TOKEN_RIGHT_PAREN TOKEN_COLON . TOKEN_NEWLINE indent fill_line

    TOKEN_NEWLINE  shift, and go to state 142


State 141

   73 arg_list: name TOKEN_COMMA arg_list .

    $default  reduce using rule 73 (arg_list)


State 142

   12 decl: name TOKEN_ASSIGN TOKEN_FUNCTION TOKEN_LEFT_PAREN arg_list TOKEN_RIGHT_PAREN TOKEN_COLON TOKEN_NEWLINE . indent fill_line

    TOKEN_INDENT_TAB    shift, and go to state 114
    TOKEN_INDENT_SPACE  shift, and go to state 115

    indent  go to state 143


State 143

   12 decl: name TOKEN_ASSIGN TOKEN_FUNCTION TOKEN_LEFT_PAREN arg_list TOKEN_RIGHT_PAREN TOKEN_COLON TOKEN_NEWLINE indent . fill_line

    TOKEN_IDENTIFIER       shift, and go to state 10
    TOKEN_INTEGER_LITERAL  shift, and go to state 11
    TOKEN_BOOL_LITERAL     shift, and go to state 12
    TOKEN_FP_LITERAL       shift, and go to state 13
    TOKEN_STRING_LITERAL   shift, and go to state 14
    TOKEN_LEFT_PAREN       shift, and go to state 15
    TOKEN_NOT              shift, and go to state 16
    TOKEN_MINUS            shift, and go to state 17
    TOKEN_PRINT            shift, and go to state 18
    TOKEN_NEWLINE          shift, and go to state 123
    TOKEN_IF               shift, and go to state 19
    TOKEN_ELSE             shift, and go to state 20
    TOKEN_RETURN           shift, and go to state 21
    TOKEN_WHILE            shift, and go to state 22
    TOKEN_BREAK            shift, and go to state 23
    TOKEN_PASS             shift, and go to state 124
    TOKEN_CONTINUE         shift, and go to state 24

    fill_line        go to state 144
    decl             go to state 126
    stmt             go to state 127
    loop_control     go to state 28
    expr             go to state 29
    expr_or          go to state 30
    expr_and         go to state 31
    expr_eq          go to state 32
    expr_comp        go to state 33
    expr_add         go to state 34
    expr_mul         go to state 35
    expr_exp         go to state 36
    expr_bool        go to state 37
    expr_minus       go to state 38
    expr_int         go to state 39
    expr_inc         go to state 40
    expr_grp         go to state 41
    value_literals   go to state 42
    non_int_literal  go to state 43
    name             go to state 44


State 144

   12 decl: name TOKEN_ASSIGN TOKEN_FUNCTION TOKEN_LEFT_PAREN arg_list TOKEN_RIGHT_PAREN TOKEN_COLON TOKEN_NEWLINE indent fill_line .

    $default  reduce using rule 12 (decl)
